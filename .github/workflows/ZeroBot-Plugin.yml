name: ZeroBot-Plugin 镜像构建
on:
  workflow_dispatch:
    inputs:
        name:
          description: 'create ZeroBot-Plugin docke image'
          required: true
          default: 'create ZeroBot-Plugin docker_images'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get current date
        id: date
        run: |
          echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        
      # set FloatTech/ZeroBot-Plugin version
      - name: ZeroBot-Plugin version
        id: version
        run: |
          echo "version=$(curl -sSL https://api.github.com/repos/FloatTech/ZeroBot-Plugin/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')" >> $GITHUB_ENV

      # download ZeroBot-Plugin latest release  
      - name: download laste version
        run: |
          wget "https://github.com/FloatTech/ZeroBot-Plugin/releases/download/${{ env.version }}/zbp_linux_amd64.tar.gz" 
          tar -zxvf zbp_linux_amd64.tar.gz
          pwd
          mv ./zbp /home/runner/work/go-cqhttp-docker/go-cqhttp-docker/ZeroBot-Plugin/zbp

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            raventu/ZeroBot-Plugin:latest
            raventu/ZeroBot-Plugin:${{ env.version }}-${{ env.today }}
          context: ./ZeroBot-Plugin
          platforms: linux/amd64

      - name: Build image and save image
        run: |
          docker build ./ZeroBot-Plugin -t raventu/ZeroBot-Plugin:${{ env.version }}-${{ env.today }}
          run: docker save -o ZeroBot-Plugin.tar raventu/ZeroBot-Plugin:${{ env.version }}-${{ env.today }}
          tar -zcvf ZeroBot-Plugin-${{ env.version }}-${{env.today}}.tar.gz ZeroBot-Plugin.tar

      # 发布 Release
      - name: Create Release and Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{env.version}}-${{env.today}}
          name: ZeroBot-Plugin-${{env.version}}-${{env.today}}
          body: version-${{env.version}},date-${{ env.today }}, Have fun.
          draft: false
          prerelease: false
          files: |
            ZeroBot-Plugin-${{ env.version }}-${{env.today}}.tar.gz
